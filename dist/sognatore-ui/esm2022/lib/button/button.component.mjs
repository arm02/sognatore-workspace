import { CommonModule } from '@angular/common';
import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class SognatoreButton {
    constructor() {
        this.variant = 'primary';
        this.size = 'medium';
        this.type = 'button';
        this.disabled = false;
        this.loading = false;
        this.loadingText = 'Loading...';
        this.fullWidth = false;
        this.click = new EventEmitter();
    }
    onClick(event) {
        if (!this.disabled && !this.loading) {
            this.click.emit(event);
        }
    }
    getButtonClasses() {
        const safeVariant = typeof this.variant === 'string' ? this.variant : 'primary';
        const safeSize = typeof this.size === 'string' ? this.size : 'medium';
        const classes = [safeVariant, safeSize];
        if (this.fullWidth) {
            classes.push('full-width');
        }
        if (this.loading) {
            classes.push('loading');
        }
        return classes;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: SognatoreButton, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: SognatoreButton, isStandalone: true, selector: "sog-button", inputs: { variant: "variant", size: "size", type: "type", disabled: "disabled", loading: "loading", loadingText: "loadingText", fullWidth: "fullWidth" }, outputs: { click: "click" }, ngImport: i0, template: `
    <button 
      class="sog-button" 
      [ngClass]="getButtonClasses()"
      [disabled]="disabled || loading"
      [type]="type"
      (click)="onClick($event)">
      <span *ngIf="loading" class="loading-spinner"></span>
      <ng-content *ngIf="!loading"></ng-content>
      <span *ngIf="loading">{{ loadingText }}</span>
    </button>
  `, isInline: true, styles: [".sog-button{display:inline-flex;align-items:center;justify-content:center;gap:.5rem;padding:.75rem 1.5rem;font-size:1rem;font-weight:500;border-radius:6px;border:1px solid transparent;cursor:pointer;transition:all .2s ease;text-decoration:none;font-family:inherit;line-height:1.5}.sog-button:focus{outline:none;box-shadow:0 0 0 3px #3498db1a}.sog-button:disabled{opacity:.6;cursor:not-allowed}.sog-button.primary{background-color:#3498db;color:#fff}.sog-button.primary:hover:not(:disabled){background-color:#2980b9}.sog-button.secondary{background-color:#6b7280;color:#fff}.sog-button.secondary:hover:not(:disabled){background-color:#4b5563}.sog-button.success{background-color:#10b981;color:#fff}.sog-button.success:hover:not(:disabled){background-color:#059669}.sog-button.danger{background-color:#ef4444;color:#fff}.sog-button.danger:hover:not(:disabled){background-color:#dc2626}.sog-button.warning{background-color:#f59e0b;color:#fff}.sog-button.warning:hover:not(:disabled){background-color:#d97706}.sog-button.outline{background-color:transparent;color:#3498db;border-color:#3498db}.sog-button.outline:hover:not(:disabled){background-color:#eff6ff}.sog-button.ghost{background-color:transparent;color:#374151}.sog-button.ghost:hover:not(:disabled){background-color:#f3f4f6}.sog-button.link{background-color:transparent;color:#3498db;padding:0;border:none;text-decoration:underline}.sog-button.link:hover:not(:disabled){color:#2980b9}.sog-button.small{padding:.5rem 1rem;font-size:.875rem}.sog-button.large{padding:1rem 2rem;font-size:1.125rem}.sog-button.full-width{width:100%}.sog-button.loading{cursor:wait}.loading-spinner{width:1rem;height:1rem;border:2px solid transparent;border-top:2px solid currentColor;border-radius:50%;animation:spin 1s linear infinite}@keyframes spin{to{transform:rotate(360deg)}}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: SognatoreButton, decorators: [{
            type: Component,
            args: [{ selector: 'sog-button', standalone: true, imports: [CommonModule], template: `
    <button 
      class="sog-button" 
      [ngClass]="getButtonClasses()"
      [disabled]="disabled || loading"
      [type]="type"
      (click)="onClick($event)">
      <span *ngIf="loading" class="loading-spinner"></span>
      <ng-content *ngIf="!loading"></ng-content>
      <span *ngIf="loading">{{ loadingText }}</span>
    </button>
  `, styles: [".sog-button{display:inline-flex;align-items:center;justify-content:center;gap:.5rem;padding:.75rem 1.5rem;font-size:1rem;font-weight:500;border-radius:6px;border:1px solid transparent;cursor:pointer;transition:all .2s ease;text-decoration:none;font-family:inherit;line-height:1.5}.sog-button:focus{outline:none;box-shadow:0 0 0 3px #3498db1a}.sog-button:disabled{opacity:.6;cursor:not-allowed}.sog-button.primary{background-color:#3498db;color:#fff}.sog-button.primary:hover:not(:disabled){background-color:#2980b9}.sog-button.secondary{background-color:#6b7280;color:#fff}.sog-button.secondary:hover:not(:disabled){background-color:#4b5563}.sog-button.success{background-color:#10b981;color:#fff}.sog-button.success:hover:not(:disabled){background-color:#059669}.sog-button.danger{background-color:#ef4444;color:#fff}.sog-button.danger:hover:not(:disabled){background-color:#dc2626}.sog-button.warning{background-color:#f59e0b;color:#fff}.sog-button.warning:hover:not(:disabled){background-color:#d97706}.sog-button.outline{background-color:transparent;color:#3498db;border-color:#3498db}.sog-button.outline:hover:not(:disabled){background-color:#eff6ff}.sog-button.ghost{background-color:transparent;color:#374151}.sog-button.ghost:hover:not(:disabled){background-color:#f3f4f6}.sog-button.link{background-color:transparent;color:#3498db;padding:0;border:none;text-decoration:underline}.sog-button.link:hover:not(:disabled){color:#2980b9}.sog-button.small{padding:.5rem 1rem;font-size:.875rem}.sog-button.large{padding:1rem 2rem;font-size:1.125rem}.sog-button.full-width{width:100%}.sog-button.loading{cursor:wait}.loading-spinner{width:1rem;height:1rem;border:2px solid transparent;border-top:2px solid currentColor;border-radius:50%;animation:spin 1s linear infinite}@keyframes spin{to{transform:rotate(360deg)}}\n"] }]
        }], propDecorators: { variant: [{
                type: Input
            }], size: [{
                type: Input
            }], type: [{
                type: Input
            }], disabled: [{
                type: Input
            }], loading: [{
                type: Input
            }], loadingText: [{
                type: Input
            }], fullWidth: [{
                type: Input
            }], click: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,